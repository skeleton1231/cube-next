'use client'
import { UserProvider } from '@/context/UserContext'
import './css/style.css'

import { Inter } from 'next/font/google'
import localFont from 'next/font/local'
import { useEffect, useState } from 'react';

const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
  display: 'swap'
})

const hkgrotesk = localFont({
  src: [
    {
      path: '../public/fonts/HKGrotesk-Medium.woff2',
      weight: '500',
    },
    {
      path: '../public/fonts/HKGrotesk-Bold.woff2',
      weight: '700',
    },
    {
      path: '../public/fonts/HKGrotesk-ExtraBold.woff2',
      weight: '800',
    },        
  ],
  variable: '--font-hkgrotesk',
  display: 'swap',  
})

// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  // // Using a state to determine if the component is mounted
  // const [isMounted, setMounted] = useState(false);

  // Updating the state after the component is mounted
  // useEffect(() => {
  //   setMounted(true);
  // }, []);

  return (
    <html lang="en">
      <body className={`${inter.variable} ${hkgrotesk.variable} font-inter antialiased bg-slate-900 text-slate-200 tracking-tight`}>
        <div className="flex flex-col min-h-screen overflow-hidden">
        {<UserProvider>{children}</UserProvider>}
        </div>
      </body>
    </html>
  )
}
